require 'rake/clean'

PLOT = 1

namespace :coin_flip do
  desc "Speedup tests"
  task :speedup do
    NUMBER_OF_ITERATIONS = 10000000
    MAX_THREADS = 8

    1.upto( MAX_THREADS ) do |thread_number|
      system( "java CoinFlip #{thread_number} #{NUMBER_OF_ITERATIONS}" )
    end
  end

  desc "Scaleup tests"
  task :scaleup do
    MAX_ITERATIONS_MULTIPLIER = 8
    ITERATIONS = 10000000
    MAX_THREADS = 8
    1.upto( MAX_THREADS ) do |thread_number|
      puts "# Threads: #{thread_number}"
      1.upto( MAX_ITERATIONS_MULTIPLIER ) do |iteration_multiplier|
        system( "java CoinFlip 1 #{iteration_multiplier * ITERATIONS}" )
      end
    end
  end

  desc "Compile CoinFlip"
  file "CoinFlip" => ['CoinFlip.java'] do
    sh 'javac CoinFlip.java'
  end

  desc "Remove compiled objects"
  task :clean do
    ["CoinFlip.class, CoinFlipThread.class"].each do |class_file|
      system( "rm #{class_file}" )
    end
  end

  desc "Use coin_flip_speedup.sh"
  task :speedup_sh do
    ITERATION_MAX_MULTIPLIER = 1
    MAX_THREADS = 8

    system( "./coin_flip_speedup.sh #{MAX_THREADS} #{ITERATION_MAX_MULTIPLIER} #{PLOT}" )
  end

  desc "Use coin_flip_speedup.sh through qsub"
  task :qsub_speedup_sh do
    ITERATION_MAX_MULTIPLIER = 1
    MAX_THREADS = 8

    system( "qsub coin_flip_speedup.sh #{MAX_THREADS} #{ITERATION_MAX_MULTIPLIER} #{PLOT}" )
  end

  desc "Use coin_flip_speedup.sh"
  task :scaleup_sh do
    ITERATION_MAX_MULTIPLIER = 8
    MAX_THREADS = 8

    1.upto( MAX_THREADS ) do |thread|
      system( "./coin_flip_scaleup.sh #{MAX_THREADS} #{ITERATION_MAX_MULTIPLIER} #{PLOT} > thread#{thread}.dat" )
    end
  end

  desc "Use coin_flip_scaleup.sh through qsub"
  task :qsub_scaleup_sh do
    ITERATION_MAX_MULTIPLIER = 8
    MAX_THREADS = 8

    1.upto( MAX_THREADS ) do |thread|
      system( "qsub coin_flip_scaleup.sh #{MAX_THREADS} #{ITERATION_MAX_MULTIPLIER} #{PLOT}" )
    end
  end
end

namespace :brute_force_des do
  desc "Speedup tests"
  task :speedup do
    KEY_SIZE = 20
    MAX_THREADS = 8
    ITERATIONS = 20

    1.upto( MAX_THREADS ) do |thread_number|
      1.upto( ITERATIONS ) do |iteration|
        system( "java BruteForcedDES #{thread_number} #{KEY_SIZE} #{iteration} #{PLOT}" )
      end
    end
  end

  desc "Scaleup tests"
  task :scaleup do
    KEY_SIZE =  20
    MAX_THREADS = 8
    ITERATIONS = 20
    
    1.upto( MAX_THREADS ) do |thread_number|
      1.upto( KEY_SIZE ) do |key_size|
        1.upto( ITERATIONS ) do |iteration|
          system( "java BruteForcedDES #{thread_number} #{key_size} #{iteration} #{PLOT} > brute_force_thread#{thread_number}.dat " )
        end
      end
    end
  end

  desc "Speedup sh file"
  task :speedup_sh do
    MAX_THREADS = 8
    KEY_SIZE = 20
    system( "./brute_force_des_speedup.sh #{MAX_THREADS} #{KEY_SIZE} #{PLOT}" )
  end

  desc "Speedup sh qsub"
  task :qsub_speedup_sh do
    MAX_THREADS = 8
    KEY_SIZE = 20
    system( "qsub brute_force_des_speedup.sh #{MAX_THREADS} #{KEY_SIZE} #{PLOT}" )
  end

  desc "Scaleup sh"
  task :scaleup_sh do
    MAX_THREADS = 8
    KEY_SIZE = 28

    1.upto( MAX_THREADS ) do |thread|
      system( "./brute_force_des_scaleup.sh #{thread} #{KEY_SIZE} #{PLOT}" )
    end
  end

  desc "Scaleup sh qsub"
  task :qsub_scaleup_sh do
    MAX_THREADS = 8
    KEY_SIZE = 28

    1.upto( MAX_THREADS ) do |thread|
      system( "qsub brute_force_des_scaleup.sh #{thread} #{KEY_SIZE} #{PLOT}" )
    end
  end
end
